buildscript {
    repositories {
        mavenCentral()
        // To use a development snapshot version of the plugin, add the
        // Sonatype Snapshots repository.
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.4.2'
    }
}

apply plugin: 'android'

sourceSets {
    testLocal {
        java.srcDir file('src/test/java')
        resources.srcDir file('src/test/resources')
    }
}

android {
    compileSdkVersion 17
    buildToolsVersion "17"

    defaultConfig {
        versionCode 1
        versionName "0.1-SNAPSHOT"
        minSdkVersion 15
        targetSdkVersion 17
        testInstrumentationRunner "com.github.frankiesardo.gaagbt.presentation.android.ui.InjectingApplicationTestRunner"
    }
}

repositories {
    mavenCentral()
}

// Sets the package version
version = "1.0.0"

dependencies {
    compile project(':github-android-core')
    instrumentTestCompile project(':github-android-core')
    instrumentTestCompile 'com.jayway.android.robotium:robotium-solo:3.6'

    testLocalCompile project(':github-android-core')
    testLocalCompile "org.easytesting:fest-assert:1.4"
    testLocalCompile "junit:junit:4.10"
    testLocalCompile "org.mockito:mockito-core:1.9.5"
    testLocalCompile "com.google.android:android:4.1.1.4"
}

task localTest(type: Test, dependsOn: assemble) {
    testClassesDir = sourceSets.testLocal.output.classesDir

    android.sourceSets.main.java.srcDirs.each { dir ->
        def buildDir = dir.getAbsolutePath().split('/')
        buildDir = (buildDir[0..(buildDir.length - 4)] + ['build', 'classes', 'debug']).join('/')

        sourceSets.testLocal.compileClasspath += files(buildDir)
        sourceSets.testLocal.runtimeClasspath += files(buildDir)
    }

    classpath = sourceSets.testLocal.runtimeClasspath
}

check.dependsOn localTest